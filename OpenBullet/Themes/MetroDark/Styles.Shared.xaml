<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:avalonEdit="http://icsharpcode.net/sharpdevelop/avalonedit"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:editor="http://icsharpcode.net/sharpdevelop/avalonedit"
    xmlns:iconsPack="http://metro.mahapps.com/winfx/xaml/iconpacks"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <!--  *********************************  COLORS  *********************************  -->
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Theme.Colors.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!--  *********************************  BRUSHES  *********************************  -->
    <SolidColorBrush
        x:Key="ForegroundBrush"
        Color="{StaticResource Color_002}" />
    <SolidColorBrush
        x:Key="LightForegroundBrush"
        Color="{StaticResource Color_001}" />
    <SolidColorBrush
        x:Key="TransparentBrush"
        Color="{StaticResource Color_016}" />
    <SolidColorBrush
        x:Key="DisabledVisualElement"
        Opacity="0.6"
        Color="{StaticResource Color_009}" />
    <SolidColorBrush
        x:Key="ValidationErrorElement"
        Color="{StaticResource Color_028}" />
    <SolidColorBrush
        x:Key="CaretForegroundBrush"
        Color="{StaticResource Color_022}" />

    <!--  Scrollbar/ScrollViewer Brushes  -->
    <SolidColorBrush
        x:Key="HScrollbarThumbBackgroundBrush"
        Color="{StaticResource Color_005}" />
    <SolidColorBrush
        x:Key="VScrollbarThumbBackgroundBrush"
        Color="{StaticResource Color_005}" />
    <SolidColorBrush
        x:Key="ScrollbarPageButtonArrowBackgroundBrush"
        Color="{StaticResource Color_005}" />
    <SolidColorBrush
        x:Key="ScrollbarPageButtonArrowPressedBackgroundBrush"
        Color="{StaticResource Color_024}" />
    <SolidColorBrush
        x:Key="ScrollbarPageButtonArrowHoverBackgroundBrush"
        Color="{StaticResource Color_003}" />
    <SolidColorBrush
        x:Key="ScrollbarPageButtonArrowDisabledBackgroundBrush"
        Color="{StaticResource Color_006}" />
    <SolidColorBrush
        x:Key="VScrollbarThumbHoverBackgroundBrush"
        Color="{StaticResource Color_003}" />
    <SolidColorBrush
        x:Key="HScrollbarThumbHoverBackgroundBrush"
        Color="{StaticResource Color_003}" />
    <SolidColorBrush
        x:Key="VScrollbarThumbPressedBackgroundBrush"
        Color="{StaticResource Color_024}" />
    <SolidColorBrush
        x:Key="HScrollbarThumbPressedBackgroundBrush"
        Color="{StaticResource Color_024}" />
    <SolidColorBrush
        x:Key="VScrollbarThumbDisabledBackgroundBrush"
        Color="{StaticResource Color_006}" />
    <SolidColorBrush
        x:Key="HScrollbarThumbDisabledBackgroundBrush"
        Color="{StaticResource Color_006}" />
    <SolidColorBrush
        x:Key="ScrollbarDisabledBackgroundBrush"
        Color="{StaticResource Color_008}" />
    <SolidColorBrush
        x:Key="ScrollbarBackgroundBrush"
        Color="{StaticResource Color_009}" />
    <SolidColorBrush
        x:Key="ScrollViewerCornerBackgroundBrush"
        Color="{StaticResource Color_009}" />

    <!--  ComboBox Brushes  -->
    <SolidColorBrush
        x:Key="ComboBoxBackgroundBrush"
        Color="{StaticResource Color_009}" />
    <SolidColorBrush
        x:Key="ComboBoxBorderBrush"
        Color="{StaticResource Color_006}" />
    <SolidColorBrush
        x:Key="ComboBoxReadOnlyBorderBrush"
        Color="{StaticResource Color_006}" />
    <SolidColorBrush
        x:Key="ComboBoxHoverBackgroundBrush"
        Color="{StaticResource Color_006}" />
    <SolidColorBrush
        x:Key="ComboBoxHoverBorderBrush"
        Color="{StaticResource Color_004}" />
    <SolidColorBrush
        x:Key="ComboBoxFocusedBorderBrush"
        Color="{StaticResource Color_024}" />
    <SolidColorBrush
        x:Key="ComboBoxDisabledBackgroundBrush"
        Opacity="0.6"
        Color="{StaticResource Color_009}" />
    <SolidColorBrush
        x:Key="PopupBackgroundBrush"
        Color="{StaticResource Color_009}" />
    <SolidColorBrush
        x:Key="PopupBorderBrush"
        Color="{StaticResource Color_006}" />
    <SolidColorBrush
        x:Key="ComboBoxReadOnlyBackgroundBrush"
        Color="{StaticResource Color_064}" />
    <!--  Need to change color or delete  -->

    <!--  TextBox Brushes  -->
    <SolidColorBrush
        x:Key="TextBoxBackgroundBrush"
        Color="{StaticResource Color_009}" />
    <SolidColorBrush
        x:Key="TextBoxBorderBrush"
        Color="{StaticResource Color_006}" />
    <SolidColorBrush
        x:Key="TextBoxHoverBackgroundBrush"
        Color="{StaticResource Color_008}" />
    <SolidColorBrush
        x:Key="TextBoxHoverBorderBrush"
        Color="{StaticResource Color_004}" />
    <SolidColorBrush
        x:Key="TextBoxFocusedBrush"
        Color="{StaticResource Color_024}" />
    <SolidColorBrush
        x:Key="TextBoxReadOnlyBackgroundBrush"
        Color="{StaticResource Color_007}" />
    <SolidColorBrush
        x:Key="TextBoxSelectionBackgroundBrush"
        Opacity="0.4"
        Color="{StaticResource Color_024}" />
    <SolidColorBrush
        x:Key="TextBoxSelectionForegroundBrush"
        Color="{StaticResource Color_025}" />

    <!--  Button Brushes  -->
    <SolidColorBrush
        x:Key="ButtonBackgroundBrush"
        Color="{StaticResource Color_009}" />
    <SolidColorBrush
        x:Key="ButtonBorderBrush"
        Color="{StaticResource Color_006}" />
    <SolidColorBrush
        x:Key="ButtonHoverBackgroundBrush"
        Color="{StaticResource Color_006}" />
    <SolidColorBrush
        x:Key="ButtonHoverBorderBrush"
        Color="{StaticResource Color_004}" />
    <SolidColorBrush
        x:Key="ButtonPressedBackgroundBrush"
        Color="{StaticResource Color_024}" />
    <SolidColorBrush
        x:Key="ButtonPressedBorderBrush"
        Color="{StaticResource Color_024}" />

    <!--  ComboBoxItem Brushes  -->
    <SolidColorBrush
        x:Key="ComboBoxItemHoverBackgroundBrush"
        Color="{StaticResource Color_006}" />
    <SolidColorBrush
        x:Key="ComboBoxItemHoverBorderBrush"
        Color="{StaticResource Color_004}" />
    <SolidColorBrush
        x:Key="ComboBoxItemPressedBackgroundBrush"
        Color="{StaticResource Color_024}" />
    <SolidColorBrush
        x:Key="ComboBoxItemPressedBorderBrush"
        Color="{StaticResource Color_024}" />

    <!--  ComboBoxToggleButton Brushes  -->
    <SolidColorBrush
        x:Key="ComboBoxToggleButtonBackgroundBrush"
        Color="{StaticResource Color_009}" />
    <SolidColorBrush
        x:Key="ComboBoxToggleButtonBorderBrush"
        Color="{StaticResource Color_006}" />
    <SolidColorBrush
        x:Key="ComboBoxToggleButtonHoverBackgroundBrush"
        Color="{StaticResource Color_008}" />
    <SolidColorBrush
        x:Key="ComboBoxToggleButtonHoverBorderBrush"
        Color="{StaticResource Color_004}" />
    <SolidColorBrush
        x:Key="ComboBoxToggleButtonPressedBackgroundBrush"
        Color="{StaticResource Color_024}" />
    <SolidColorBrush
        x:Key="ComboBoxToggleButtonDropDownSeparatorBackgroundBrush"
        Color="{StaticResource Color_006}" />
    <SolidColorBrush
        x:Key="ComboBoxToggleButtonPressedBorderBrush"
        Color="{StaticResource Color_024}" />

    <!--  ListBox Brushes  -->
    <SolidColorBrush
        x:Key="ListBoxBackgroundBrush"
        Color="{StaticResource Color_009}" />
    <SolidColorBrush
        x:Key="ListBoxBorderBrush"
        Color="{StaticResource Color_006}" />
    <SolidColorBrush
        x:Key="ListBoxItemHoverBackgroundBrush"
        Color="{StaticResource Color_006}" />
    <SolidColorBrush
        x:Key="ListBoxItemHoverBorderBrush"
        Color="{StaticResource Color_004}" />
    <SolidColorBrush
        x:Key="ListBoxItemPressedBackgroundBrush"
        Color="{StaticResource Color_024}" />
    <SolidColorBrush
        x:Key="ListBoxItemPressedBorderBrush"
        Color="{StaticResource Color_024}" />

    <SolidColorBrush
        x:Key="ListBoxItemBackgroundBrush"
        Color="{StaticResource Color_016}" />
    <!--  Need to change color or delete  -->
    <SolidColorBrush
        x:Key="ListBoxItemBorderBrush"
        Color="{StaticResource Color_016}" />
    <!--  Need to change color or delete  -->
    <SolidColorBrush
        x:Key="ListBoxItemSelectedBackgroundBrush"
        Color="{StaticResource Color_024}" />
    <!--  Need to change color or delete  -->
    <SolidColorBrush
        x:Key="ListBoxItemSelectedBorderBrush"
        Color="{StaticResource Color_024}" />
    <!--  Need to change color or delete  -->

    <!--  CheckBox Brushes  -->
    <SolidColorBrush
        x:Key="CheckBoxBackgroundBrush"
        Color="{StaticResource Color_009}" />
    <SolidColorBrush
        x:Key="CheckBoxHoverBackgroundBrush"
        Color="{StaticResource Color_009}" />
    <SolidColorBrush
        x:Key="CheckBoxPressedBackgroundBrush"
        Color="{StaticResource Color_009}" />
    <SolidColorBrush
        x:Key="CheckBoxFocusedBackgroundBrush"
        Color="{StaticResource Color_009}" />
    <SolidColorBrush
        x:Key="CheckBoxInvalidUnfocusedBackgroundBrush"
        Color="{StaticResource Color_009}" />
    <SolidColorBrush
        x:Key="CheckBoxInvalidFocusedBackgroundBrush"
        Color="{StaticResource Color_009}" />
    <SolidColorBrush
        x:Key="CheckBoxBorderBrush"
        Color="{StaticResource Color_006}" />
    <SolidColorBrush
        x:Key="CheckBoxHoverBorderBrush"
        Color="{StaticResource Color_004}" />
    <SolidColorBrush
        x:Key="CheckBoxPressedBorderBrush"
        Color="{StaticResource Color_024}" />
    <SolidColorBrush
        x:Key="CheckBoxFocusedBorderBrush"
        Color="{StaticResource Color_024}" />
    <SolidColorBrush
        x:Key="CheckBoxInvalidUnfocusedBorderBrush"
        Color="{StaticResource Color_029}" />
    <SolidColorBrush
        x:Key="CheckBoxInvalidFocusedBorderBrush"
        Color="{StaticResource Color_028}" />
    <SolidColorBrush
        x:Key="CheckBoxIndeterminateCheckBackgroundBrush"
        Color="{StaticResource Color_004}" />
    <SolidColorBrush
        x:Key="CheckBoxCheckBackgroundBrush"
        Color="{StaticResource Color_024}" />

    <!--  RadioButton Brushes  -->
    <SolidColorBrush
        x:Key="RadioButtonBackgroundBrush"
        Color="{StaticResource Color_009}" />
    <SolidColorBrush
        x:Key="RadioButtonHoverBackgroundBrush"
        Color="{StaticResource Color_009}" />
    <SolidColorBrush
        x:Key="RadioButtonPressedBackgroundBrush"
        Color="{StaticResource Color_009}" />
    <SolidColorBrush
        x:Key="RadioButtonFocusedBackgroundBrush"
        Color="{StaticResource Color_009}" />
    <SolidColorBrush
        x:Key="RadioButtonInvalidUnfocusedBackgroundBrush"
        Color="{StaticResource Color_009}" />
    <SolidColorBrush
        x:Key="RadioButtonInvalidFocusedBackgroundBrush"
        Color="{StaticResource Color_009}" />
    <SolidColorBrush
        x:Key="RadioButtonBorderBrush"
        Color="{StaticResource Color_006}" />
    <SolidColorBrush
        x:Key="RadioButtonHoverBorderBrush"
        Color="{StaticResource Color_004}" />
    <SolidColorBrush
        x:Key="RadioButtonPressedBorderBrush"
        Color="{StaticResource Color_024}" />
    <SolidColorBrush
        x:Key="RadioButtonFocusedBorderBrush"
        Color="{StaticResource Color_024}" />
    <SolidColorBrush
        x:Key="RadioButtonInvalidUnfocusedBorderBrush"
        Color="{StaticResource Color_029}" />
    <SolidColorBrush
        x:Key="RadioButtonInvalidFocusedBorderBrush"
        Color="{StaticResource Color_028}" />
    <SolidColorBrush
        x:Key="RadioButtonCheckBackgroundBrush"
        Color="{StaticResource Color_024}" />
    <SolidColorBrush
        x:Key="RadioButtonIndeterminateCheckBackgroundBrush"
        Color="{StaticResource Color_004}" />

    <!--  Visual Glyphs brushes  -->
    <SolidColorBrush
        x:Key="GlyphBackgroundBrush"
        Color="{StaticResource Color_003}" />
    <SolidColorBrush
        x:Key="GlyphHoverBackgroundBrush"
        Color="{StaticResource Color_002}" />
    <SolidColorBrush
        x:Key="GlyphPressedBackgroundBrush"
        Color="{StaticResource Color_024}" />
    <SolidColorBrush
        x:Key="GlyphDisabledBackgroundBrush"
        Color="{StaticResource Color_005}" />

    <!--  ValidationToolTip Brushes  -->
    <SolidColorBrush
        x:Key="ValidationToolTipTemplateShadowBrush"
        Color="{StaticResource Color_003}" />

    <!--  ToolTip Brushes  -->
    <SolidColorBrush
        x:Key="TooltipBackgroundBrush"
        Color="{StaticResource Color_009}" />
    <SolidColorBrush
        x:Key="TooltipBorderBrush"
        Color="{StaticResource Color_006}" />

    <!--
        ******************************************************** SL-WPF SHARED INLINE CONTROLS RESOURCES ***********************************************************
        ***********************************************************************************************************************************************************************
    -->

    <!--  *********************************  ValidationToolTip Template  *********************************  -->
    <ControlTemplate x:Key="ValidationToolTipTemplate">
        <Grid
            x:Name="Root"
            Margin="5,0"
            Opacity="0"
            RenderTransformOrigin="0,0">
            <Grid.RenderTransform>
                <TranslateTransform x:Name="xform" X="-25" />
            </Grid.RenderTransform>
            <Border
                Margin="4,4,-4,-4"
                Background="{StaticResource ValidationToolTipTemplateShadowBrush}"
                Opacity="0.02" />
            <Border
                Margin="3,3,-3,-3"
                Background="{StaticResource ValidationToolTipTemplateShadowBrush}"
                Opacity="0.08" />
            <Border
                Margin="2,2,-2,-2"
                Background="{StaticResource ValidationToolTipTemplateShadowBrush}"
                Opacity="0.15" />
            <Border
                Margin="1,1,-1,-1"
                Background="{StaticResource ValidationToolTipTemplateShadowBrush}"
                Opacity="0.21" />
            <Border Background="{StaticResource ValidationErrorElement}" />
            <Border>
                <TextBlock
                    MaxWidth="250"
                    Margin="8,4,8,4"
                    Foreground="{StaticResource LightForegroundBrush}"
                    Text="{Binding (Validation.Errors)[0].ErrorContent}"
                    TextWrapping="Wrap"
                    UseLayoutRounding="false" />
            </Border>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="OpenStates">
                    <VisualStateGroup.Transitions>
                        <VisualTransition GeneratedDuration="0" />
                        <VisualTransition
                            GeneratedDuration="0:0:0.2"
                            To="Open">
                            <Storyboard>
                                <DoubleAnimation
                                    Storyboard.TargetName="xform"
                                    Storyboard.TargetProperty="X"
                                    To="0"
                                    Duration="0:0:0.2">
                                    <DoubleAnimation.EasingFunction>
                                        <BackEase
                                            Amplitude=".3"
                                            EasingMode="EaseOut" />
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                                <DoubleAnimation
                                    Storyboard.TargetName="Root"
                                    Storyboard.TargetProperty="Opacity"
                                    To="1"
                                    Duration="0:0:0.2" />
                            </Storyboard>
                        </VisualTransition>
                    </VisualStateGroup.Transitions>
                    <VisualState x:Name="Closed">
                        <Storyboard>
                            <DoubleAnimation
                                Storyboard.TargetName="Root"
                                Storyboard.TargetProperty="Opacity"
                                To="0"
                                Duration="0" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Open">
                        <Storyboard>
                            <DoubleAnimation
                                Storyboard.TargetName="xform"
                                Storyboard.TargetProperty="X"
                                To="0"
                                Duration="0" />
                            <DoubleAnimation
                                Storyboard.TargetName="Root"
                                Storyboard.TargetProperty="Opacity"
                                To="1"
                                Duration="0" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
    </ControlTemplate>

    <!--  *********************************  ComboBoxToggleButton Style   *********************************  -->
    <Style
        x:Key="ComboBoxToggleButtonStyle"
        TargetType="ToggleButton">
        <Setter Property="FontSize" Value="12" />
        <Setter Property="FontFamily" Value="Consolas" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource ComboBoxToggleButtonBorderBrush}" />
        <Setter Property="Background" Value="{StaticResource ComboBoxToggleButtonBackgroundBrush}" />
        <Setter Property="MinWidth" Value="30" />
        <Setter Property="MinHeight" Value="30" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="2" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="30" />
                        </Grid.ColumnDefinitions>
                        <Rectangle
                            x:Name="Bd"
                            Grid.ColumnSpan="2"
                            Fill="{TemplateBinding Background}"
                            Stroke="{TemplateBinding BorderBrush}"
                            StrokeThickness="{TemplateBinding BorderThickness}" />
                        <Grid Grid.Column="1">
                            <Rectangle
                                Width="1"
                                Margin="-1,5,0,5"
                                HorizontalAlignment="Left"
                                Fill="{StaticResource ComboBoxToggleButtonDropDownSeparatorBackgroundBrush}" />
                            <Path
                                x:Name="Arrow"
                                Width="10"
                                Height="6"
                                Data="F1 M 301.14,-189.041L 311.57,-189.041L 306.355,-182.942L 301.14,-189.041 Z "
                                Fill="{StaticResource GlyphBackgroundBrush}"
                                Stretch="Fill" />
                            <Path
                                x:Name="ArrowSelected"
                                Width="10"
                                Height="6"
                                Data="F1 M 301.14,-189.041L 311.57,-189.041L 306.355,-182.942L 301.14,-189.041 Z "
                                Fill="{StaticResource GlyphPressedBackgroundBrush}"
                                Stretch="Fill"
                                Visibility="Collapsed" />
                        </Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames
                                            Storyboard.TargetName="Arrow"
                                            Storyboard.TargetProperty="Fill"
                                            Duration="0">
                                            <DiscreteObjectKeyFrame
                                                KeyTime="0"
                                                Value="{StaticResource GlyphHoverBackgroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames
                                            Storyboard.TargetName="Bd"
                                            Storyboard.TargetProperty="Fill"
                                            Duration="0">
                                            <DiscreteObjectKeyFrame
                                                KeyTime="0"
                                                Value="{StaticResource ComboBoxToggleButtonHoverBackgroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames
                                            Storyboard.TargetName="Bd"
                                            Storyboard.TargetProperty="Stroke"
                                            Duration="0">
                                            <DiscreteObjectKeyFrame
                                                KeyTime="0"
                                                Value="{StaticResource ComboBoxToggleButtonHoverBorderBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames
                                            Storyboard.TargetName="Arrow"
                                            Storyboard.TargetProperty="Fill"
                                            Duration="0">
                                            <DiscreteObjectKeyFrame
                                                KeyTime="0"
                                                Value="{StaticResource GlyphPressedBackgroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames
                                            Storyboard.TargetName="Arrow"
                                            Storyboard.TargetProperty="Fill"
                                            Duration="0">
                                            <DiscreteObjectKeyFrame
                                                KeyTime="0"
                                                Value="{StaticResource GlyphDisabledBackgroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames
                                            Storyboard.TargetName="ArrowSelected"
                                            Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked" />
                                <VisualState x:Name="Indeterminate" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused" />
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  *********************************  ComboBoxItem Style  *********************************  -->
    <Style
        x:Key="ComboBoxItemStyle"
        TargetType="ComboBoxItem">
        <Setter Property="FontSize" Value="12" />
        <Setter Property="FontFamily" Value="Consolas" />
        <Setter Property="MinHeight" Value="30" />
        <Setter Property="Padding" Value="6,0" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Background" Value="{StaticResource TransparentBrush}" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBoxItem">
                    <Grid Background="{TemplateBinding Background}">
                        <Rectangle Fill="{StaticResource TransparentBrush}" />
                        <Rectangle
                            x:Name="fillColor"
                            Fill="{StaticResource ComboBoxItemHoverBackgroundBrush}"
                            IsHitTestVisible="False"
                            Opacity="0"
                            Stroke="{StaticResource ComboBoxItemHoverBorderBrush}"
                            StrokeThickness="{TemplateBinding BorderThickness}" />
                        <Rectangle
                            x:Name="CheckedBd"
                            Fill="{StaticResource ComboBoxItemPressedBackgroundBrush}"
                            IsHitTestVisible="False"
                            Stroke="{StaticResource ComboBoxItemPressedBorderBrush}"
                            StrokeThickness="{TemplateBinding BorderThickness}"
                            Visibility="Collapsed" />
                        <ContentControl
                            x:Name="contentControl"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Foreground="{TemplateBinding Foreground}">
                            <ContentPresenter x:Name="contentPresenter" />
                        </ContentControl>
                        <ContentControl
                            x:Name="contentControl1"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Foreground="{StaticResource ForegroundBrush}"
                            Visibility="Collapsed">
                            <ContentPresenter x:Name="contentPresenter1" />
                        </ContentControl>
                        <Rectangle
                            x:Name="FocusVisualElement"
                            Stroke="{StaticResource ComboBoxItemPressedBackgroundBrush}"
                            StrokeThickness="2"
                            Visibility="Collapsed" />
                        <Rectangle
                            x:Name="DisabledVisualElement"
                            Fill="{StaticResource DisabledVisualElement}"
                            Visibility="Collapsed" />
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="fillColor"
                                            Storyboard.TargetProperty="Opacity"
                                            To="1"
                                            Duration="0" />
                                        <ObjectAnimationUsingKeyFrames
                                            Storyboard.TargetName="contentControl"
                                            Storyboard.TargetProperty="Foreground"
                                            Duration="0">
                                            <DiscreteObjectKeyFrame
                                                KeyTime="0"
                                                Value="{StaticResource LightForegroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames
                                            Storyboard.TargetName="DisabledVisualElement"
                                            Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Unselected" />
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames
                                            Storyboard.TargetName="CheckedBd"
                                            Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames
                                            Storyboard.TargetName="contentControl"
                                            Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames
                                            Storyboard.TargetName="contentControl1"
                                            Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames
                                            Storyboard.TargetName="contentControl1"
                                            Storyboard.TargetProperty="Foreground"
                                            Duration="0">
                                            <DiscreteObjectKeyFrame
                                                KeyTime="0"
                                                Value="{StaticResource LightForegroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="SelectedUnfocused" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames
                                            Storyboard.TargetName="FocusVisualElement"
                                            Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="LayoutStates">
                                <VisualState x:Name="AfterLoaded" />
                                <VisualState x:Name="BeforeLoaded" />
                                <VisualState x:Name="BeforeUnloaded" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  *********************************  ListBoxItem Style  *********************************  -->
    <Style
        x:Key="ListBoxItemStyle"
        TargetType="ListBoxItem">
        <Setter Property="Background" Value="{StaticResource TransparentBrush}" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="MinHeight" Value="30" />
        <Setter Property="Padding" Value="6,2" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Grid>
                        <Rectangle
                            x:Name="Bd"
                            Fill="{TemplateBinding Background}" />
                        <Rectangle
                            x:Name="BgSelected"
                            Fill="{StaticResource ListBoxItemSelectedBackgroundBrush}"
                            Stroke="{StaticResource ListBoxItemSelectedBorderBrush}"
                            Visibility="Collapsed" />
                        <ContentControl
                            x:Name="contentControl"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Foreground="{TemplateBinding Foreground}">
                            <ContentPresenter x:Name="contentPresenter" />
                        </ContentControl>
                        <ContentControl
                            x:Name="contentControl1"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Foreground="{StaticResource ForegroundBrush}"
                            Visibility="Collapsed">
                            <ContentPresenter x:Name="contentPresenter1" />
                        </ContentControl>
                        <Rectangle
                            x:Name="FocusedVisualElement"
                            IsHitTestVisible="False"
                            Stroke="{StaticResource ListBoxItemPressedBorderBrush}"
                            StrokeThickness="2"
                            Visibility="Collapsed" />
                        <Rectangle
                            x:Name="DisabledVisualElement"
                            Fill="{StaticResource DisabledVisualElement}"
                            Visibility="Collapsed" />
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames
                                            Storyboard.TargetName="Bd"
                                            Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame
                                                KeyTime="0"
                                                Value="{StaticResource ListBoxItemHoverBackgroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames
                                            Storyboard.TargetName="Bd"
                                            Storyboard.TargetProperty="Stroke">
                                            <DiscreteObjectKeyFrame
                                                KeyTime="0"
                                                Value="{StaticResource ListBoxItemHoverBorderBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames
                                            Storyboard.TargetName="contentControl"
                                            Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame
                                                KeyTime="0"
                                                Value="{StaticResource LightForegroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames
                                            Storyboard.TargetName="DisabledVisualElement"
                                            Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Unselected" />
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames
                                            Storyboard.TargetName="BgSelected"
                                            Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames
                                            Storyboard.TargetName="contentControl"
                                            Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames
                                            Storyboard.TargetName="contentControl1"
                                            Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames
                                            Storyboard.TargetName="contentControl1"
                                            Storyboard.TargetProperty="Foreground"
                                            Duration="0">
                                            <DiscreteObjectKeyFrame
                                                KeyTime="0"
                                                Value="{StaticResource LightForegroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="SelectedUnfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames
                                            Storyboard.TargetName="BgSelected"
                                            Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames
                                            Storyboard.TargetName="contentControl"
                                            Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames
                                            Storyboard.TargetName="contentControl1"
                                            Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames
                                            Storyboard.TargetName="contentControl1"
                                            Storyboard.TargetProperty="Foreground"
                                            Duration="0">
                                            <DiscreteObjectKeyFrame
                                                KeyTime="0"
                                                Value="{StaticResource LightForegroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames
                                            Storyboard.TargetName="FocusedVisualElement"
                                            Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  ********************************** CheckBox Style **********************************  -->
    <Style
        x:Key="CheckBoxStyle"
        TargetType="CheckBox">
        <Setter Property="Foreground" Value="{DynamicResource ForegroundMain}" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="6,0,0,0" />
        <Setter Property="MinHeight" Value="30" />
        <Setter Property="MinWidth" Value="30" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Grid
                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="30" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Rectangle Fill="{StaticResource TransparentBrush}" />
                        <Rectangle
                            x:Name="normal"
                            Width="18"
                            Height="18"
                            Fill="{DynamicResource BackgroundSecondary}"
                            Opacity="1"
                            Stroke="{StaticResource CheckBoxBorderBrush}"
                            StrokeThickness="1" />
                        <Rectangle
                            x:Name="hover"
                            Width="18"
                            Height="18"
                            Fill="{StaticResource CheckBoxHoverBackgroundBrush}"
                            Opacity="0"
                            Stroke="{StaticResource CheckBoxHoverBorderBrush}"
                            StrokeThickness="1" />
                        <Rectangle
                            x:Name="pressed"
                            Width="18"
                            Height="18"
                            Fill="{StaticResource CheckBoxPressedBackgroundBrush}"
                            Opacity="0"
                            Stroke="{StaticResource CheckBoxPressedBorderBrush}"
                            StrokeThickness="1" />
                        <Rectangle
                            x:Name="focused"
                            Width="18"
                            Height="18"
                            Fill="{StaticResource CheckBoxFocusedBackgroundBrush}"
                            Opacity="0"
                            Stroke="{StaticResource CheckBoxFocusedBorderBrush}"
                            StrokeThickness="1" />
                        <Rectangle
                            x:Name="invalidUnfocused"
                            Width="18"
                            Height="18"
                            Fill="{StaticResource CheckBoxInvalidUnfocusedBackgroundBrush}"
                            Opacity="0"
                            Stroke="{StaticResource CheckBoxInvalidUnfocusedBackgroundBrush}"
                            StrokeThickness="1" />
                        <Rectangle
                            x:Name="invalidFocused"
                            Width="18"
                            Height="18"
                            Fill="{StaticResource CheckBoxInvalidFocusedBackgroundBrush}"
                            Opacity="0"
                            Stroke="{StaticResource CheckBoxInvalidFocusedBorderBrush}"
                            StrokeThickness="1" />
                        <Path
                            x:Name="checkBox"
                            Width="12"
                            Height="10"
                            Data="M 1145.607177734375,430 C1145.607177734375,430 1141.449951171875,435.0772705078125 1141.449951171875,435.0772705078125 1141.449951171875,435.0772705078125 1139.232177734375,433.0999755859375 1139.232177734375,433.0999755859375 1139.232177734375,433.0999755859375 1138,434.5538330078125 1138,434.5538330078125 1138,434.5538330078125 1141.482177734375,438 1141.482177734375,438 1141.482177734375,438 1141.96875,437.9375 1141.96875,437.9375 1141.96875,437.9375 1147,431.34619140625 1147,431.34619140625 1147,431.34619140625 1145.607177734375,430 1145.607177734375,430 z"
                            Fill="{StaticResource CheckBoxCheckBackgroundBrush}"
                            Opacity="0"
                            Stretch="Fill"
                            UseLayoutRounding="False" />
                        <Rectangle
                            x:Name="IndeterminateCheck"
                            Width="8"
                            Height="3"
                            Fill="{StaticResource CheckBoxIndeterminateCheckBackgroundBrush}"
                            Opacity="0" />
                        <Rectangle
                            x:Name="disabled"
                            Width="18"
                            Height="18"
                            Fill="{StaticResource DisabledVisualElement}"
                            Opacity="0"
                            StrokeThickness="1" />
                        <ContentPresenter
                            x:Name="contentPresenter"
                            Grid.Column="1"
                            Margin="{TemplateBinding Padding}"
                            Content="{TemplateBinding Content}"
                            ContentTemplate="{TemplateBinding ContentTemplate}" />
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="hover"
                                            Storyboard.TargetProperty="(UIElement.Opacity)"
                                            To="1"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="pressed"
                                            Storyboard.TargetProperty="(UIElement.Opacity)"
                                            To="1"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="contentPresenter"
                                            Storyboard.TargetProperty="(UIElement.Opacity)"
                                            To=".55"
                                            Duration="0" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="disabled"
                                            Storyboard.TargetProperty="(UIElement.Opacity)"
                                            To="1"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="checkBox"
                                            Storyboard.TargetProperty="(UIElement.Opacity)"
                                            To="1"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked" />
                                <VisualState x:Name="Indeterminate">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="IndeterminateCheck"
                                            Storyboard.TargetProperty="(UIElement.Opacity)"
                                            To="1"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="focused"
                                            Storyboard.TargetProperty="(UIElement.Opacity)"
                                            To="1"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid" />
                                <VisualState x:Name="InvalidUnfocused">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="invalidUnfocused"
                                            Storyboard.TargetProperty="(UIElement.Opacity)"
                                            To="1"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="InvalidFocused">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="invalidFocused"
                                            Storyboard.TargetProperty="(UIElement.Opacity)"
                                            To="1"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  ********************************** RadioButton Style **********************************  -->
    <Style
        x:Key="RadioButtonStyle"
        TargetType="RadioButton">
        <Setter Property="Foreground" Value="{DynamicResource ForegroundMain}" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="6,0,0,0" />
        <Setter Property="MinHeight" Value="30" />
        <Setter Property="MinWidth" Value="20" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="18" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Rectangle
                            Margin="-6,0"
                            Fill="{StaticResource TransparentBrush}" />
                        <Ellipse
                            x:Name="normal"
                            Width="18"
                            Height="18"
                            Fill="{StaticResource RadioButtonBackgroundBrush}"
                            Opacity="1"
                            Stroke="{StaticResource RadioButtonBorderBrush}"
                            StrokeThickness="1" />
                        <Ellipse
                            x:Name="hover"
                            Width="18"
                            Height="18"
                            Fill="{StaticResource RadioButtonHoverBackgroundBrush}"
                            Opacity="0"
                            Stroke="{StaticResource RadioButtonHoverBorderBrush}"
                            StrokeThickness="1" />
                        <Ellipse
                            x:Name="pressed"
                            Width="18"
                            Height="18"
                            Fill="{StaticResource RadioButtonPressedBackgroundBrush}"
                            Opacity="0"
                            Stroke="{StaticResource RadioButtonPressedBorderBrush}"
                            StrokeThickness="1" />
                        <Ellipse
                            x:Name="focused"
                            Width="18"
                            Height="18"
                            Fill="{StaticResource RadioButtonFocusedBackgroundBrush}"
                            Opacity="0"
                            Stroke="{StaticResource RadioButtonFocusedBorderBrush}"
                            StrokeThickness="1" />
                        <Ellipse
                            x:Name="invalidUnfocused"
                            Width="18"
                            Height="18"
                            Fill="{StaticResource RadioButtonInvalidUnfocusedBackgroundBrush}"
                            Opacity="0"
                            Stroke="{StaticResource RadioButtonInvalidUnfocusedBorderBrush}"
                            StrokeThickness="1" />
                        <Ellipse
                            x:Name="invalidFocused"
                            Width="18"
                            Height="18"
                            Fill="{StaticResource RadioButtonInvalidFocusedBackgroundBrush}"
                            Opacity="0"
                            Stroke="{StaticResource RadioButtonInvalidFocusedBorderBrush}"
                            StrokeThickness="1" />
                        <Ellipse
                            x:Name="Checked1"
                            Width="10"
                            Height="10"
                            Fill="{StaticResource RadioButtonCheckBackgroundBrush}"
                            Opacity="0" />
                        <ContentPresenter
                            x:Name="contentPresenter"
                            Grid.Column="1"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Content="{TemplateBinding Content}"
                            ContentTemplate="{TemplateBinding ContentTemplate}" />
                        <Ellipse
                            x:Name="disabled"
                            Width="18"
                            Height="18"
                            Fill="{StaticResource DisabledVisualElement}"
                            Opacity="0"
                            StrokeThickness="1" />
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="hover"
                                            Storyboard.TargetProperty="(UIElement.Opacity)"
                                            To="1"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="pressed"
                                            Storyboard.TargetProperty="(UIElement.Opacity)"
                                            To="1"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="contentPresenter"
                                            Storyboard.TargetProperty="(UIElement.Opacity)"
                                            To=".55"
                                            Duration="0" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="disabled"
                                            Storyboard.TargetProperty="(UIElement.Opacity)"
                                            To="1"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="Checked1"
                                            Storyboard.TargetProperty="(UIElement.Opacity)"
                                            To="1"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked" />
                                <VisualState x:Name="Indeterminate" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="focused"
                                            Storyboard.TargetProperty="(UIElement.Opacity)"
                                            To="1"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid" />
                                <VisualState x:Name="InvalidUnfocused">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="invalidUnfocused"
                                            Storyboard.TargetProperty="(UIElement.Opacity)"
                                            To="1"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="InvalidFocused">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="invalidFocused"
                                            Storyboard.TargetProperty="(UIElement.Opacity)"
                                            To="1"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  *********************************  Button Style  *********************************  -->
    <Style
        x:Key="ButtonStyle"
        TargetType="Button">
        <Setter Property="Foreground" Value="{DynamicResource ForegroundMain}" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="Padding" Value="10,0,10,2" />
        <Setter Property="MinHeight" Value="30" />
        <Setter Property="MinWidth" Value="30" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Rectangle
                            x:Name="Bd"
                            Fill="{DynamicResource BackgroundSecondary}"
                            Stroke="{StaticResource ButtonBorderBrush}"
                            StrokeThickness="1" />
                        <ContentControl
                            x:Name="ContentControl"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Foreground="{TemplateBinding Foreground}">
                            <ContentPresenter x:Name="contentPresenter" />
                        </ContentControl>
                        <Rectangle
                            x:Name="FocusedVisualElement"
                            Stroke="{StaticResource ButtonPressedBorderBrush}"
                            StrokeThickness="2"
                            Visibility="Collapsed" />
                        <Rectangle
                            x:Name="DisabledVisualElement"
                            Fill="{StaticResource DisabledVisualElement}"
                            Visibility="Collapsed" />
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames
                                            Storyboard.TargetName="Bd"
                                            Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame
                                                KeyTime="0"
                                                Value="{DynamicResource BackgroundMain}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames
                                            Storyboard.TargetName="Bd"
                                            Storyboard.TargetProperty="Stroke">
                                            <DiscreteObjectKeyFrame
                                                KeyTime="0"
                                                Value="{StaticResource ButtonHoverBorderBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames
                                            Storyboard.TargetName="ContentControl"
                                            Storyboard.TargetProperty="Foreground"
                                            Duration="0">
                                            <DiscreteObjectKeyFrame
                                                KeyTime="0"
                                                Value="{StaticResource LightForegroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames
                                            Storyboard.TargetName="Bd"
                                            Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame
                                                KeyTime="0"
                                                Value="{DynamicResource BackgroundSecondary}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames
                                            Storyboard.TargetName="Bd"
                                            Storyboard.TargetProperty="Stroke">
                                            <DiscreteObjectKeyFrame
                                                KeyTime="0"
                                                Value="{StaticResource ButtonPressedBorderBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames
                                            Storyboard.TargetName="ContentControl"
                                            Storyboard.TargetProperty="Foreground"
                                            Duration="0">
                                            <DiscreteObjectKeyFrame
                                                KeyTime="0"
                                                Value="{StaticResource LightForegroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames
                                            Storyboard.TargetName="DisabledVisualElement"
                                            Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames
                                            Storyboard.TargetName="FocusedVisualElement"
                                            Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  my button style  -->
    <Style
        x:Key="MyButtonStyle"
        TargetType="Button">
        <Setter Property="Foreground" Value="{DynamicResource ForegroundMain}" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="Padding" Value="10,0,10,2" />
        <Setter Property="MinHeight" Value="30" />
        <Setter Property="MinWidth" Value="30" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Rectangle
                            x:Name="Bd"
                            Fill="{TemplateBinding Background}"
                            Stroke="{TemplateBinding BorderBrush}"
                            StrokeThickness="1" />
                        <ContentControl
                            x:Name="ContentControl"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Foreground="{TemplateBinding Foreground}">
                            <ContentPresenter x:Name="contentPresenter" />
                        </ContentControl>
                        <Rectangle
                            x:Name="FocusedVisualElement"
                            Stroke="{StaticResource ButtonPressedBorderBrush}"
                            StrokeThickness="2"
                            Visibility="Collapsed" />
                        <Rectangle
                            x:Name="DisabledVisualElement"
                            Fill="{StaticResource DisabledVisualElement}"
                            Visibility="Collapsed" />
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames
                                            Storyboard.TargetName="Bd"
                                            Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame
                                                KeyTime="0"
                                                Value="{DynamicResource BackgroundMain}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames
                                            Storyboard.TargetName="Bd"
                                            Storyboard.TargetProperty="Stroke">
                                            <DiscreteObjectKeyFrame
                                                KeyTime="0"
                                                Value="{StaticResource ButtonHoverBorderBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames
                                            Storyboard.TargetName="ContentControl"
                                            Storyboard.TargetProperty="Foreground"
                                            Duration="0">
                                            <DiscreteObjectKeyFrame
                                                KeyTime="0"
                                                Value="{StaticResource LightForegroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames
                                            Storyboard.TargetName="Bd"
                                            Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame
                                                KeyTime="0"
                                                Value="{DynamicResource BackgroundSecondary}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames
                                            Storyboard.TargetName="Bd"
                                            Storyboard.TargetProperty="Stroke">
                                            <DiscreteObjectKeyFrame
                                                KeyTime="0"
                                                Value="{StaticResource ButtonPressedBorderBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames
                                            Storyboard.TargetName="ContentControl"
                                            Storyboard.TargetProperty="Foreground"
                                            Duration="0">
                                            <DiscreteObjectKeyFrame
                                                KeyTime="0"
                                                Value="{StaticResource LightForegroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames
                                            Storyboard.TargetName="DisabledVisualElement"
                                            Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames
                                            Storyboard.TargetName="FocusedVisualElement"
                                            Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="CircleButton"
        TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Ellipse Fill="{TemplateBinding Background}" />
                        <ContentPresenter
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Content="{TemplateBinding Content}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  contextmenu style  -->
    <Style TargetType="{x:Type ContextMenu}">
        <Setter Property="Background" Value="{DynamicResource BackgroundMain}" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Block.TextAlignment" Value="Left" />
        <Setter Property="BorderBrush" Value="{DynamicResource AccordionBorderBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource ForegroundMain}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="FontFamily" Value="{DynamicResource {x:Static SystemFonts.MenuFontFamilyKey}}" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="FontStyle" Value="{DynamicResource {x:Static SystemFonts.MenuFontStyleKey}}" />
        <Setter Property="FontWeight" Value="{DynamicResource {x:Static SystemFonts.MenuFontWeightKey}}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" />
        <Setter Property="Grid.IsSharedSizeScope" Value="True" />
        <Setter Property="HasDropShadow" Value="True" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="RenderOptions.ClearTypeHint" Value="Enabled" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <Grid>
                        <Rectangle
                            x:Name="LayoutRoot"
                            Fill="{DynamicResource BackgroundMain}" />
                        <Border
                            x:Name="Border"
                            Padding="{TemplateBinding Padding}"
                            Background="{DynamicResource BackgroundMain}"
                            BorderBrush="{DynamicResource AccordionBorderBrush}"
                            BorderThickness="1"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">

                            <ScrollViewer
                                x:Name="SubMenuScrollViewer"
                                CanContentScroll="True"
                                Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer,
                                                                              TypeInTargetAssembly={x:Type FrameworkElement}}}">
                                <ItemsPresenter
                                    x:Name="ItemsPresenter"
                                    Margin="0"
                                    Grid.IsSharedSizeScope="True"
                                    KeyboardNavigation.DirectionalNavigation="Cycle"
                                    KeyboardNavigation.TabNavigation="Cycle"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </ScrollViewer>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasDropShadow" Value="True">
                            <Setter TargetName="Border" Property="Margin" Value="0,0,6,6" />
                            <Setter TargetName="LayoutRoot" Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect
                                        BlurRadius="4"
                                        Opacity="0.8"
                                        ShadowDepth="1" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="LayoutRoot" Property="Margin" Value="0,0,6,6" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="TextOptions.TextFormattingMode" Value="Ideal" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
    </Style>

    <Style TargetType="{x:Type MenuItem}">
        <Setter Property="Background" Value="{DynamicResource BackgroundMain}" />
        <Setter Property="Foreground" Value="{DynamicResource ForegroundMain}" />
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="RenderOptions.ClearTypeHint" Value="Enabled" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=SubmenuItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Style.Triggers>
            <Trigger Property="Role" Value="TopLevelHeader">
                <Setter Property="Padding" Value="7,5,8,6" />
                <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=TopLevelHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}" />
            </Trigger>
            <Trigger Property="Role" Value="TopLevelItem">
                <Setter Property="Padding" Value="7,5,8,6" />
                <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=TopLevelItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}" />
            </Trigger>
            <Trigger Property="Role" Value="SubmenuHeader">
                <Setter Property="Padding" Value="2,6,2,6" />
                <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=SubmenuHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}" />
            </Trigger>
            <Trigger Property="Role" Value="SubmenuItem">
                <Setter Property="Padding" Value="-2,6,0,6" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <ContextMenu x:Key="MahApps.TextBox.ContextMenu">
        <MenuItem Command="ApplicationCommands.Cut">
            <MenuItem.Icon>
                <iconsPack:FontAwesome Kind="CutSolid" />
            </MenuItem.Icon>
        </MenuItem>
        <MenuItem Command="ApplicationCommands.Copy">
            <MenuItem.Icon>
                <iconsPack:FontAwesome Kind="CopySolid" />
            </MenuItem.Icon>
        </MenuItem>
        <MenuItem Command="ApplicationCommands.Paste">
            <MenuItem.Icon>
                <iconsPack:FontAwesome Kind="PasteSolid" />
            </MenuItem.Icon>
        </MenuItem>
    </ContextMenu>

    <ContextMenu x:Key="RichTextBox.ContextMenu">
        <MenuItem Command="ApplicationCommands.Cut">
            <MenuItem.Icon>
                <iconsPack:FontAwesome Kind="CutSolid" />
            </MenuItem.Icon>
        </MenuItem>
        <MenuItem Command="ApplicationCommands.Copy">
            <MenuItem.Icon>
                <iconsPack:FontAwesome Kind="CopySolid" />
            </MenuItem.Icon>
        </MenuItem>
        <MenuItem Command="ApplicationCommands.Paste">
            <MenuItem.Icon>
                <iconsPack:FontAwesome Kind="PasteSolid" />
            </MenuItem.Icon>
        </MenuItem>
        <MenuItem Command="ApplicationCommands.SelectAll">
            <MenuItem.Icon>
                <iconsPack:PackIconModern Kind="ListSelect" />
            </MenuItem.Icon>
        </MenuItem>
    </ContextMenu>

    <!--  SubmenuItem  -->

    <ControlTemplate
        x:Key="{x:Static MenuItem.SubmenuItemTemplateKey}"
        TargetType="{x:Type MenuItem}">
        <Border
            Name="Border"
            Background="{DynamicResource BackgroundMain}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition
                        Width="Auto"
                        SharedSizeGroup="Icon" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition
                        Width="Auto"
                        SharedSizeGroup="Shortcut" />
                    <ColumnDefinition Width="13" />
                </Grid.ColumnDefinitions>
                <ContentPresenter
                    Name="Icon"
                    Margin="6,0,8,0"
                    VerticalAlignment="Center"
                    ContentSource="Icon" />
                <Border
                    Name="Check"
                    Width="13"
                    Height="13"
                    Margin="6,0,6,0"
                    Background="{DynamicResource BackgroundMain}"
                    BorderBrush="{DynamicResource AccordionBorderBrush}"
                    BorderThickness="1"
                    Visibility="Collapsed">
                    <Path
                        Name="CheckMark"
                        Width="7"
                        Height="7"
                        Data="M 0 0 L 7 7 M 0 7 L 7 0"
                        SnapsToDevicePixels="False"
                        Stroke="{DynamicResource ForegroundGood}"
                        StrokeThickness="2"
                        Visibility="Hidden" />
                </Border>
                <ContentPresenter
                    Name="HeaderHost"
                    Grid.Column="1"
                    VerticalAlignment="Center"
                    ContentSource="Header"
                    RecognizesAccessKey="True" />
                <TextBlock
                    x:Name="InputGestureText"
                    Grid.Column="2"
                    Margin="5,6,0,6"
                    DockPanel.Dock="Right"
                    Text="{TemplateBinding InputGestureText}" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Hidden" />
            </Trigger>
            <Trigger Property="IsChecked" Value="true">
                <Setter TargetName="CheckMark" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="IsCheckable" Value="true">
                <Setter TargetName="Check" Property="Visibility" Value="Visible" />
                <Setter TargetName="Icon" Property="Visibility" Value="Hidden" />
            </Trigger>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter TargetName="Border" Property="Background" Value="#5082a4" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground">
                    <Setter.Value>
                        <SolidColorBrush
                            Opacity="0.4"
                            Color="#969696" />
                    </Setter.Value>
                </Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--  SubmenuHeader  -->

    <ControlTemplate
        x:Key="{x:Static MenuItem.SubmenuHeaderTemplateKey}"
        TargetType="{x:Type MenuItem}">
        <Border
            Name="Border"
            Background="{DynamicResource BackgroundMain}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition
                        Width="Auto"
                        SharedSizeGroup="Icon" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition
                        Width="Auto"
                        SharedSizeGroup="Shortcut" />
                    <ColumnDefinition Width="13" />
                </Grid.ColumnDefinitions>
                <ContentPresenter
                    Name="Icon"
                    Margin="6,0,6,0"
                    VerticalAlignment="Center"
                    ContentSource="Icon" />
                <ContentPresenter
                    Name="HeaderHost"
                    Grid.Column="1"
                    VerticalAlignment="Center"
                    ContentSource="Header"
                    RecognizesAccessKey="True" />
                <TextBlock
                    x:Name="InputGestureText"
                    Grid.Column="2"
                    Margin="5,6,2,6"
                    DockPanel.Dock="Right"
                    Text="{TemplateBinding InputGestureText}" />
                <Path
                    Grid.Column="3"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Data="M 0 0 L 0 7 L 4 3.5 Z"
                    Fill="{DynamicResource ForegroundMain}" />
                <Popup
                    Name="Popup"
                    AllowsTransparency="True"
                    Focusable="False"
                    HorizontalOffset="-4"
                    IsOpen="{TemplateBinding IsSubmenuOpen}"
                    Placement="Right"
                    PopupAnimation="Fade">
                    <Border
                        Name="SubmenuBorder"
                        Background="{DynamicResource BackgroundMain}"
                        BorderBrush="{DynamicResource AccordionBorderBrush}"
                        BorderThickness="1"
                        SnapsToDevicePixels="True">
                        <StackPanel
                            IsItemsHost="True"
                            KeyboardNavigation.DirectionalNavigation="Cycle" />
                    </Border>
                </Popup>
            </Grid>
        </Border>

        <ControlTemplate.Triggers>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter TargetName="Border" Property="Background" Value="#5082a4" />
            </Trigger>
            <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="True">
                <Setter TargetName="SubmenuBorder" Property="CornerRadius" Value="4" />
                <Setter TargetName="SubmenuBorder" Property="Padding" Value="0,3,0,3" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="#2186C9" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="RichTextBox">
        <Setter Property="ContextMenu" Value="{StaticResource RichTextBox.ContextMenu}" />
        <Setter Property="BorderBrush" Value="{DynamicResource AccordionBorderBrush}" />
    </Style>

    <Style
        x:Key="{x:Static MenuItem.SeparatorStyleKey}"
        TargetType="{x:Type Separator}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Separator}">
                    <!--  ControlTemplate with a TemplateBinding to Background here  -->
                    <Border
                        Height="1"
                        Margin="1,0,1,0"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="true" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="editor:SearchPanel">


        <Setter Property="Template">


            <Setter.Value>


                <ControlTemplate TargetType="{x:Type editor:SearchPanel}">


                    <Border
                        HorizontalAlignment="Right"
                        VerticalAlignment="Top"
                        Background="{DynamicResource WindowBackgroundBrush}"
                        BorderBrush="{DynamicResource AccentColorBrush}"
                        BorderThickness="1,0,1,1"
                        Cursor="Arrow">


                        <StackPanel Orientation="Horizontal">


                            <TextBox
                                Name="PART_searchTextBox"
                                Width="150"
                                Height="Auto"
                                Margin="3,3,0,3"
                                BorderBrush="{DynamicResource AccentColorBrush}"
                                Focusable="True">


                                <TextBox.Text>


                                    <Binding
                                        Path="SearchPattern"
                                        RelativeSource="{RelativeSource TemplatedParent}"
                                        UpdateSourceTrigger="PropertyChanged">


                                        <Binding.ValidationRules>


                                            <ExceptionValidationRule />


                                        </Binding.ValidationRules>


                                    </Binding>


                                </TextBox.Text>


                            </TextBox>





                            <!--  FindNext button  -->


                            <Button
                                Width="30"
                                Height="30"
                                Margin="0,1,1,1"
                                Padding="1"
                                BorderBrush="Transparent"
                                BorderThickness="0"
                                Command="editor:SearchCommands.FindNext"
                                Style="{DynamicResource MetroAccentButton}"
                                ToolTip="{Binding Localization.FindNextText, RelativeSource={RelativeSource TemplatedParent}}">


                                <Path
                                    Data="F1M-218.342,2910.79L-234.066,2926.52 -233.954,2926.63 -225.428,2926.63 -210.87,2912.07 -206.495,2907.7 -225.313,2888.88 -234.066,2888.88 -218.342,2904.6 -259.829,2904.6 -259.829,2910.79 -218.342,2910.79z"
                                    Style="{DynamicResource DefaultButtonPathStyle}" />


                            </Button>





                            <!--  FindPrevious (set visibility if required) button  -->


                            <Button
                                Width="30"
                                Height="30"
                                Margin="1"
                                Padding="1"
                                BorderBrush="Transparent"
                                BorderThickness="0"
                                Command="editor:SearchCommands.FindPrevious"
                                Style="{DynamicResource AccentedSquareButtonStyle}"
                                ToolTip="{Binding Localization.FindPreviousText, RelativeSource={RelativeSource TemplatedParent}}"
                                Visibility="Collapsed">


                                <Path
                                    Width="16"
                                    Height="16"
                                    Data="F1M-185.925,-2026.96L-203.062,-2048.74C-197.485,-2056.51 -197.433,-2067.31 -203.64,-2075.2 -211.167,-2084.76 -225.019,-2086.42 -234.588,-2078.89 -244.154,-2071.36 -245.808,-2057.51 -238.282,-2047.94 -231.986,-2039.95 -221.274,-2037.5 -212.337,-2041.31L-195.262,-2019.61 -185.925,-2026.96z M-231.201,-2053.51C-235.653,-2059.17 -234.674,-2067.36 -229.02,-2071.81 -223.36,-2076.26 -215.169,-2075.29 -210.721,-2069.63 -206.269,-2063.97 -207.245,-2055.78 -212.902,-2051.33 -218.559,-2046.88 -226.752,-2047.86 -231.201,-2053.51z"
                                    Fill="{DynamicResource IdealForegroundColorBrush}"
                                    Stretch="Uniform" />


                            </Button>





                            <StackPanel Orientation="Horizontal">


                                <ToggleButton
                                    Width="36"
                                    Height="36"
                                    Margin="0"
                                    Content="aA"
                                    Cursor="Hand"
                                    FontFamily="Consolas,Courier New,Courier"
                                    FontWeight="Bold"
                                    IsChecked="{Binding MatchCase, RelativeSource={RelativeSource TemplatedParent}}"
                                    Style="{DynamicResource MetroCircleToggleButtonStyle}"
                                    ToolTip="{Binding Localization.MatchCaseText, RelativeSource={RelativeSource TemplatedParent}}" />





                                <ToggleButton
                                    Width="36"
                                    Height="36"
                                    Margin="0"
                                    Content="Ab"
                                    Cursor="Hand"
                                    FontFamily="Consolas,Courier New,Courier"
                                    FontWeight="Bold"
                                    IsChecked="{Binding WholeWords, RelativeSource={RelativeSource TemplatedParent}}"
                                    Style="{DynamicResource MetroCircleToggleButtonStyle}"
                                    ToolTip="{Binding Localization.MatchWholeWordsText, RelativeSource={RelativeSource TemplatedParent}}" />





                                <ToggleButton
                                    Width="36"
                                    Height="36"
                                    Margin="0"
                                    Content="a*"
                                    Cursor="Hand"
                                    FontFamily="Consolas,Courier New,Courier"
                                    FontWeight="Bold"
                                    IsChecked="{Binding UseRegex, RelativeSource={RelativeSource TemplatedParent}}"
                                    Style="{DynamicResource MetroCircleToggleButtonStyle}"
                                    ToolTip="{Binding Localization.UseRegexText, RelativeSource={RelativeSource TemplatedParent}}" />


                            </StackPanel>





                            <!--  Search Panel close button  -->


                            <Button
                                Width="16"
                                Height="16"
                                Padding="0"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Top"
                                HorizontalContentAlignment="Center"
                                VerticalContentAlignment="Center"
                                Background="Transparent"
                                Command="editor:SearchCommands.CloseSearchPanel"
                                Cursor="Hand">


                                <Path
                                    Width="10"
                                    Height="10"
                                    Margin="0"
                                    Data="F1M54.0573,47.8776L38.1771,31.9974 54.0547,16.1198C55.7604,14.4141 55.7604,11.6511 54.0573,9.94531 52.3516,8.23962 49.5859,8.23962 47.8802,9.94531L32.0026,25.8229 16.1224,9.94531C14.4167,8.23962 11.6511,8.23962 9.94794,9.94531 8.24219,11.6511 8.24219,14.4141 9.94794,16.1198L25.8255,32 9.94794,47.8776C8.24219,49.5834 8.24219,52.3477 9.94794,54.0534 11.6511,55.7572 14.4167,55.7585 16.1224,54.0534L32.0026,38.1745 47.8802,54.0534C49.5859,55.7585 52.3516,55.7572 54.0573,54.0534 55.7604,52.3477 55.763,49.5834 54.0573,47.8776z"
                                    Fill="Red"
                                    Stretch="Uniform" />


                            </Button>
                        </StackPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>