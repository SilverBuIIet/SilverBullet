<Page
    x:Class="OpenBullet.Views.StackerBlocks.PageBlockParse"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:conv="clr-namespace:OpenBullet.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:ruri="clr-namespace:RuriLib;assembly=RuriLib"
    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
    Title="PageBlockParse"
    d:DesignHeight="500"
    d:DesignWidth="400"
    mc:Ignorable="d">

    <Grid>
        <Grid.Resources>
            <conv:EnumBooleanConverter x:Key="ComparisonConverter" />
            <conv:BooleanBrushConverter x:Key="BrushConverter" />
        </Grid.Resources>

        <Grid.RowDefinitions>
            <RowDefinition Height="auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <StackPanel Grid.Row="0">
            <DockPanel>
                <Label
                    Content="Parse:"
                    DockPanel.Dock="Left" />
                <TextBox
                    DockPanel.Dock="Left"
                    Text="{Binding ParseTarget, UpdateSourceTrigger=PropertyChanged}" />
            </DockPanel>
            <DockPanel>
                <CheckBox
                    x:Name="captureBox"
                    VerticalContentAlignment="Center"
                    Click="CaptureBox_Click"
                    Content="Is Capture"
                    DockPanel.Dock="Left"
                    Foreground="{Binding Path=IsCapture, Converter={StaticResource BrushConverter}}"
                    IsChecked="{Binding IsCapture}" />
                <Label
                    Margin="5,0,0,0"
                    Content="Var/Cap Name:"
                    DockPanel.Dock="Left" />
                <TextBox
                    DockPanel.Dock="Left"
                    Text="{Binding VariableName, UpdateSourceTrigger=PropertyChanged}" />
            </DockPanel>

            <Grid Margin="0,5">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <DockPanel Grid.Column="0">
                    <Label
                        Content="Prefix:"
                        DockPanel.Dock="Left" />
                    <TextBox
                        DockPanel.Dock="Left"
                        Text="{Binding Prefix, UpdateSourceTrigger=PropertyChanged}" />
                </DockPanel>

                <DockPanel Grid.Column="1">
                    <Label
                        Content="Suffix:"
                        DockPanel.Dock="Left" />
                    <TextBox
                        DockPanel.Dock="Left"
                        Text="{Binding Suffix, UpdateSourceTrigger=PropertyChanged}" />
                </DockPanel>

            </Grid>

            <DockPanel Grid.Column="1">
                <Label Content="Mode:" />
                <RadioButton
                    x:Name="LRRadio"
                    Margin="3,0"
                    Checked="LRRadio_Checked"
                    Content="LR"
                    IsChecked="{Binding Path=Type, Converter={StaticResource ComparisonConverter}, ConverterParameter={x:Static ruri:ParseType.LR}}" />
                <RadioButton
                    x:Name="CSSRadio"
                    Margin="3,0"
                    Checked="CSSRadio_Checked"
                    Content="CSS"
                    IsChecked="{Binding Path=Type, Converter={StaticResource ComparisonConverter}, ConverterParameter={x:Static ruri:ParseType.CSS}}" />
                <RadioButton
                    x:Name="JSONRadio"
                    Margin="3,0"
                    Checked="JSONRadio_Checked"
                    Content="JSON"
                    IsChecked="{Binding Path=Type, Converter={StaticResource ComparisonConverter}, ConverterParameter={x:Static ruri:ParseType.JSON}}" />
                <RadioButton
                    x:Name="REGEXRadio"
                    Margin="3,0"
                    Checked="REGEXRadio_Checked"
                    Content="REGEX"
                    IsChecked="{Binding Path=Type, Converter={StaticResource ComparisonConverter}, ConverterParameter={x:Static ruri:ParseType.REGEX}}" />
            </DockPanel>

            <TabControl
                x:Name="typeTabControl"
                Grid.Row="1"
                Background="Transparent"
                BorderThickness="0">
                <TabControl.ItemContainerStyle>
                    <Style TargetType="{x:Type TabItem}">
                        <Setter Property="Visibility" Value="Collapsed" />
                    </Style>
                </TabControl.ItemContainerStyle>
                <TabItem>
                    <StackPanel>
                        <DockPanel>
                            <Label Content="Left string:" />
                            <TextBox Text="{Binding LeftString, UpdateSourceTrigger=PropertyChanged}" />
                        </DockPanel>
                        <DockPanel>
                            <Label Content="Right string:" />
                            <TextBox Text="{Binding RightString, UpdateSourceTrigger=PropertyChanged}" />
                        </DockPanel>
                        <DockPanel>
                            <CheckBox
                                VerticalContentAlignment="Center"
                                Content="Recursive"
                                IsChecked="{Binding Recursive}" />
                            <CheckBox
                                VerticalContentAlignment="Center"
                                Content="Enc. Output"
                                IsChecked="{Binding EncodeOutput}" />
                            <CheckBox
                                VerticalContentAlignment="Center"
                                Content="Create Empty"
                                IsChecked="{Binding CreateEmpty}" />
                            <CheckBox
                                VerticalContentAlignment="Center"
                                Content="Use Regex"
                                IsChecked="{Binding UseRegexLR}">
                                <CheckBox.ToolTip>
                                    <TextBlock>
                                        Whether the program matches the LEFT and RIGHT strings through a regex pattern<LineBreak />
                                        or with simple string in string searches</TextBlock>
                                </CheckBox.ToolTip>
                            </CheckBox>
                        </DockPanel>
                        <Label Content="Automatic mode:" />

                        <RichTextBox
                            x:Name="LRRTB"
                            Height="200"
                            Background="{DynamicResource BackgroundSecondary}"
                            FontFamily="Consolas"
                            Foreground="{DynamicResource ForegroundMain}"
                            KeyUp="LRRTB_KeyUp">
                            <RichTextBox.Resources>
                                <Style TargetType="{x:Type Paragraph}">
                                    <Setter Property="Margin" Value="0" />
                                </Style>
                            </RichTextBox.Resources>
                            <RichTextBox.ToolTip>
                                <TextBlock>
                                    You can paste the source code in this box, and highlight the part you want to parse.<LineBreak />
                                    When the SHIFT key is released, the program will try to automatically determine the LEFT and RIGHT strings</TextBlock>
                            </RichTextBox.ToolTip>
                        </RichTextBox>
                    </StackPanel>
                </TabItem>
                <TabItem>
                    <StackPanel>
                        <DockPanel>
                            <Label Content="Selector:" />
                            <TextBox Text="{Binding CssSelector, UpdateSourceTrigger=PropertyChanged}" />
                        </DockPanel>
                        <DockPanel>
                            <Label Content="Attribute:" />
                            <TextBox
                                Text="{Binding AttributeName, UpdateSourceTrigger=PropertyChanged}"
                                ToolTip="If you want to parse stuff directly inside the element, write innerHTML" />
                        </DockPanel>
                        <DockPanel>
                            <Label Content="Index:" />
                            <xctk:IntegerUpDown
                                Width="60"
                                HorizontalAlignment="Right"
                                Value="{Binding CssElementIndex}" />
                        </DockPanel>
                        <StackPanel Orientation="Horizontal">
                            <CheckBox
                                VerticalContentAlignment="Center"
                                Content="Recursive"
                                IsChecked="{Binding Recursive}" />
                            <CheckBox
                                VerticalContentAlignment="Center"
                                Content="Encode Output"
                                IsChecked="{Binding EncodeOutput}" />
                            <CheckBox
                                VerticalContentAlignment="Center"
                                Content="Create Empty"
                                IsChecked="{Binding CreateEmpty}" />
                        </StackPanel>
                    </StackPanel>
                </TabItem>
                <TabItem>
                    <StackPanel>
                        <DockPanel>
                            <Label Content="Field Name:" />
                            <TextBox Text="{Binding JsonField, UpdateSourceTrigger=PropertyChanged}" />
                        </DockPanel>
                        <CheckBox
                            VerticalContentAlignment="Center"
                            Content="Use JToken Parsing"
                            IsChecked="{Binding JTokenParsing}"
                            ToolTip="Allows navigating through fields using . for children and [i] or [*] for arrays" />
                        <StackPanel Orientation="Horizontal">
                            <CheckBox
                                VerticalContentAlignment="Center"
                                Content="Recursive"
                                IsChecked="{Binding Recursive}" />
                            <CheckBox
                                VerticalContentAlignment="Center"
                                Content="Encode Output"
                                IsChecked="{Binding EncodeOutput}" />
                            <CheckBox
                                VerticalContentAlignment="Center"
                                Content="Create Empty"
                                IsChecked="{Binding CreateEmpty}" />
                        </StackPanel>
                    </StackPanel>
                </TabItem>
                <TabItem>
                    <StackPanel>
                        <DockPanel>
                            <Label Content="Regex:" />
                            <TextBox Text="{Binding RegexString, UpdateSourceTrigger=PropertyChanged}" />
                        </DockPanel>
                        <DockPanel>
                            <Label Content="Output:" />
                            <TextBox
                                Text="{Binding RegexOutput, UpdateSourceTrigger=PropertyChanged}"
                                ToolTip="You can write: [0] = Full Match, [1] = First group etc." />
                        </DockPanel>
                        <DockPanel>
                            <Label Content="Index:" />
                            <xctk:IntegerUpDown
                                MinWidth="45"
                                Margin="9,0,0,0"
                                HorizontalAlignment="Left"
                                Background="{DynamicResource BackgroundMain}"
                                Foreground="{DynamicResource ForegroundMain}"
                                IsEnabled="{Binding Recursive}"
                                Minimum="-1"
                                Text="{Binding IndexOutputList, UpdateSourceTrigger=PropertyChanged}"
                                TextAlignment="Center"
                                ToolTip="output list" />
                        </DockPanel>
                        <StackPanel Orientation="Horizontal">
                            <CheckBox
                                VerticalContentAlignment="Center"
                                Content="Recursive"
                                IsChecked="{Binding Recursive}" />
                            <CheckBox
                                VerticalContentAlignment="Center"
                                Content="Encode Output"
                                IsChecked="{Binding EncodeOutput}" />
                            <CheckBox
                                VerticalContentAlignment="Center"
                                Content="Create Empty"
                                IsChecked="{Binding CreateEmpty}" />
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <CheckBox
                                VerticalContentAlignment="Center"
                                Content="Dot Matches Line Breaks"
                                IsChecked="{Binding DotMatches}" />
                            <CheckBox
                                VerticalContentAlignment="Center"
                                Content="Case Sensitive"
                                IsChecked="{Binding CaseSensitive}" />
                        </StackPanel>
                    </StackPanel>
                </TabItem>
            </TabControl>
        </StackPanel>
    </Grid>
</Page>
